# Template for Processing sketches.

ballSize = 30
rectDimension = PVector(30, 100)
rectLocation_1 = PVector(150, 0)
rectLocation_2 = PVector(150, 180)
radius = ballSize / 2

def setup():
    size(600, 400)

def draw():
    global ballSize
    global radius
    
    background(255)
    
    player = PVector(mouseX, mouseY)
    
# Player
    ellipse(player.x, player.y, ballSize, ballSize)
    
# Obstacle 1
    rect(rectLocation_1.x, rectLocation_1.y, rectDimension.x, rectDimension.y)
    rect(rectLocation_2.x, rectLocation_2.y, rectDimension.x, height)
    
# Collision for Top of Player and Bottom of Bbstacle
 #   topBall = player.y - radius
  #  if topBall <= rectDimension.y:
   #     print("collision")
    #else:
        print("Not")

# Collision for Bottom of Player and Top of Obstacle
    bottomBall = player.y + radius
    if bottomBall >= (height - (height - 180)) or topBall <= rectDimension.y:
        print("collision")
    else:
    print("Not")

#Collision for Left of Player and Right of Obstacle
    leftBall = player.x - radius
 #   if leftBall <= (rectDimension.x + 100) and (bottomBall >= (height - 220) or  topBall <= rectDimension.y):
  #      print("collision")
   # else:
    #    print("not")

#Collision for Right of Player and Left of Obstacle
    rightBall = player.x + radius
    if (rightBall >= rectLocation_1.x and leftBall <= (rectLocation_1.x + rectDimension.x)) and (bottomBall >= (height - (height - rectLocation_2.y)) or  topBall <= rectDimension.y):
        print("collision")
    else:
        print("not")
